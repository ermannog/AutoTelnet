Telnet Negotiaton
https://tools.ietf.org/html/rfc854
http://pcmicro.com/NetFoss/telnet.html
https://support.microsoft.com/en-us/kb/231866


The commands are distinguished by the use of various characters with the most significant bit set. Commands are always introduced by a character with the decimal code 255 known as an Interpret as command (IAC) character
Either end of a telnet dialogue can enable or disable an option either locally or remotely. The initiator sends a 3 byte command of the form 
IAC,<type of operation>,<option>
The response is of the same form. 

For the server to find out if a client supports the telnet protocol at all, one good approach is to a simple, commonly
used telnet command to the client. If the client reacts conform to the protocol (or sends telnet commands itself), the
server can continue to negotiate further options. If the client does not react, the server can safely refrain from further negotiations.

Commands:
Name	Decimal Code	Description
SE			240			End of subnegotiation parameters.  
NOP			241			No operation  
DM			242			Data mark. Indicates the position of a Synch event within the data stream. This should always be accompanied by a TCP urgent notification.  
BRK			243			Break. Indicates that the "break" or "attention" key was hit.  
IP			244			Suspend, interrupt or abort the process to which the NVT is connected.  
AO			245			Abort output. Allows the current process to run to completion but do not send its output to the user.  
AYT			246			Are you there. Send back to the NVT some visible evidence that the AYT was received.  
EC			247			Erase character. The receiver should delete the last preceding undeleted character from the data stream.  
EL			248			Erase line. Delete characters from the data stream back to but not including the previous CRLF.  
GA			249			Go ahead. Used, under certain circumstances, to tell the other end that it can transmit.  
SB			250			Subnegotiation of the indicated option follows.  
WILL		251			Indicates the desire to begin performing, or confirmation that you are now performing, the indicated option.  
WONT		252			Indicates the refusal to perform, or continue performing, the indicated option.  
DO			253			Indicates the request that the other party perform, or confirmation that you are expecting the other party to perform, the indicated option.  
DONT		254			Indicates the demand that the other party stop performing, or confirmation that you are no longer expecting the other party to perform, the indicated option.  
IAC			255			Interpret as command

Common Telnet options: 
Decimal code	Option Name
 0				Transmit Binary  
 1				Echo  
 3				Suppress Go Ahead 
 5				Status
 6				Timing Mark 
24				Terminal Type  
31				Window Size  
32				Terminal Speed 
33				Remote Flow Control  
34				Linemode  
36				Environment Variables  

Operations:
Description	 Decimal Code	Action  
WILL			251			Sender wants to do something.  
WONT			252			Sender doesn't want to do something.  
DO				253			Sender wants the other end to do something.  
DONT			254			Sender wants the other not to do something.  

Associated with each of the these Operations there are various possible responses:
Sender Sent		Receiver Responds	Implication  
WILL			DO					The sender would like to use a certain facility if the receiver can handle it. Option is now in effect  
WILL			DONT				Receiver says it cannot support the option. Option is not in effect.  
DO				WILL				The sender says it can handle traffic from the sender if the sender wishes to use a certain option. Option is now in effect.  
DO				WONT				Receiver says it cannot support the option. Option is not in effect.  
WONT			DONT				Option disabled. DONT is only valid response.  
DONT			WONT				Option disabled. WONT is only valid response.


Samples:
Sender wants the other end to suppress go-ahead it would send the byte sequence 
IAC,<type of operation>,<option>
255(IAC),251(WILL),3(Suppress Go Ahead)


http://stackoverflow.com/questions/10413963/telnet-iac-command-answering
From RFC 854: 
Since the NVT is what is left when no options are enabled, the DON'T and WON'T responses are guaranteed to leave the connection
in a state which both ends can handle. Thus, all hosts may implement their TELNET processes to be totally unaware of options
that are not supported, simply returning a rejection to (i.e., refusing) any option request that cannot be understood.

That is, for every WILL, respond DONT. For every DO, respond WONT.
 



  
